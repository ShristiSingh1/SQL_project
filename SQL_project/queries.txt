-- Retrieve data from data1 table
SELECT * FROM project.dbo.data1;

-- Retrieve data from data2 table
SELECT * FROM project.dbo.data2;

-- Count rows in data1 table
SELECT COUNT(*) FROM project..data1;

-- Count rows in data2 table
SELECT COUNT(*) FROM project..data2;

-- Filter data1 table for Jharkhand and Bihar states
SELECT * FROM project..data1 WHERE state IN ('Jharkhand', 'Bihar');

-- Calculate total population of India from data2 table
SELECT SUM(population) AS Population FROM project..data2;

-- Calculate average growth rate by state
SELECT state, AVG(growth) * 100 AS avg_growth FROM project..data1 GROUP BY state;

-- Calculate average sex ratio by state
SELECT state, ROUND(AVG(sex_ratio), 0) AS avg_sex_ratio FROM project..data1 GROUP BY state ORDER BY avg_sex_ratio DESC;

-- Calculate average literacy rate by state with literacy rate > 90
SELECT state, ROUND(AVG(literacy), 0) AS avg_literacy_ratio FROM project..data1 
GROUP BY state HAVING ROUND(AVG(literacy), 0) > 90 ORDER BY avg_literacy_ratio DESC;

-- Retrieve top 3 states with highest growth rate
SELECT state, AVG(growth) * 100 AS avg_growth FROM project..data1 GROUP BY state ORDER BY avg_growth DESC LIMIT 3;

-- Retrieve bottom 3 states with lowest sex ratio
SELECT TOP 3 state, ROUND(AVG(sex_ratio), 0) AS avg_sex_ratio FROM project..data1 GROUP BY state ORDER BY avg_sex_ratio ASC;

-- Create temporary table #topstates and insert data
CREATE TEMPORARY TABLE IF NOT EXISTS #topstates (
    state VARCHAR(255),
    topstate FLOAT
);
INSERT INTO #topstates
SELECT state, ROUND(AVG(literacy), 0) AS avg_literacy_ratio FROM project..data1 
GROUP BY state ORDER BY avg_literacy_ratio DESC;

-- Retrieve top 3 records from #topstates
SELECT * FROM #topstates ORDER BY #topstates.topstate DESC LIMIT 3;

-- Create temporary table #bottomstates and insert data
CREATE TEMPORARY TABLE IF NOT EXISTS #bottomstates (
    state VARCHAR(255),
    bottomstate FLOAT
);
INSERT INTO #bottomstates
SELECT state, ROUND(AVG(literacy), 0) AS avg_literacy_ratio FROM project..data1 
GROUP BY state ORDER BY avg_literacy_ratio DESC;

-- Retrieve bottom 3 records from #bottomstates
SELECT * FROM #bottomstates ORDER BY #bottomstates.bottomstate ASC LIMIT 3;

-- Union top 3 and bottom 3 states from #topstates and #bottomstates
SELECT * FROM (
    SELECT TOP 3 * FROM #topstates ORDER BY #topstates.topstate DESC
) a
UNION
SELECT * FROM (
    SELECT TOP 3 * FROM #bottomstates ORDER BY #bottomstates.bottomstate ASC
) b;

-- Retrieve distinct states starting with 'A' or 'B'
SELECT DISTINCT state FROM project..data1 WHERE LOWER(state) LIKE 'a%' OR LOWER(state) LIKE 'b%';

-- Retrieve distinct states starting with 'A' and containing 'M'
SELECT DISTINCT state FROM project..data1 WHERE LOWER(state) LIKE 'a%' AND LOWER(state) LIKE '%m';

-- Calculate total males and females by state
SELECT d.state, SUM(d.males) AS total_males, SUM(d.females) AS total_females FROM (
    SELECT c.district, c.state AS state, ROUND(c.population / (c.sex_ratio + 1), 0) AS males, ROUND((c.population * c.sex_ratio) / (c.sex_ratio + 1), 0) AS females 
    FROM (
        SELECT a.district, a.state, a.sex_ratio / 1000 AS sex_ratio, b.population 
        FROM project..data1 a INNER JOIN project..data2 b ON a.district = b.district 
    ) c
) d
GROUP BY d.state;

-- Calculate total literacy rate by state
SELECT c.state, SUM(literate_people) AS total_literate_pop, SUM(illiterate_people) AS total_illiterate_pop FROM 
(SELECT d.district, d.state, ROUND(d.literacy_ratio * d.population, 0) AS literate_people,
ROUND((1 - d.literacy_ratio) * d.population, 0) AS illiterate_people FROM
(SELECT a.district, a.state, a.literacy / 100 literacy_ratio, b.population FROM project..data1 a 
INNER JOIN project..data2 b ON a.district = b.district) d) c
GROUP BY c.state;

-- Calculate population in previous and current census
SELECT SUM(m.previous_census_population) AS previous_census_population, SUM(m.current_census_population) AS current_census_population FROM(
SELECT e.state,SUM(e.previous_census_population) AS previous_census_population,SUM(e.current_census_population) AS current_census_population FROM
(SELECT d.district,d.state,ROUND(d.population/(1+d.growth),0) AS previous_census_population,d.population AS current_census_population FROM
(SELECT a.district,a.state,a.growth AS growth,b.population FROM project..data1 a INNER JOIN project..data2 b ON a.district=b.district) d) e
GROUP BY e.state)m;

-- Calculate population vs area ratio
SELECT (g.total_area/g.previous_census_population) AS previous_census_population_vs_area, 
(g
